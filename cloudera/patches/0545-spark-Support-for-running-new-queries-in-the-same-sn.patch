From c1ae1f63355bbdbc56f0dfba1512df8a2cead7f3 Mon Sep 17 00:00:00 2001
From: Enrico Berti <hello@enricoberti.com>
Date: Thu, 4 Dec 2014 01:09:31 +0100
Subject: [PATCH 0545/1173] [spark] Support for running new queries in the
 same snipper and row numbers

---
 apps/spark/src/spark/templates/editor.mako         |   63 ++++++++++++++------
 apps/spark/static/css/spark.css                    |    4 ++
 apps/spark/static/js/spark.vm.js                   |   27 ++++++---
 .../jquery/plugins/jquery.dataTables.1.8.2.min.js  |    8 +--
 4 files changed, 72 insertions(+), 30 deletions(-)

diff --git a/apps/spark/src/spark/templates/editor.mako b/apps/spark/src/spark/templates/editor.mako
index 35ae0e6..43162dd 100644
--- a/apps/spark/src/spark/templates/editor.mako
+++ b/apps/spark/src/spark/templates/editor.mako
@@ -218,21 +218,18 @@ ${ commonheader(_('Query'), app_name, user, "68px") | n,unicode }
             <li class="nav-header">${_('columns')}</li>
           </ul>
           <ul class="unstyled" data-bind="foreach: result.meta">
-            <li><input type="checkbox" checked="checked" data-bind="event: { change: function(){toggleColumn($element, $index());}}" /> <a class="pointer" data-bind="text: $data.name, click: function(){ scrollToColumn($element, $index()); }"></a></li>
+            <li data-bind="visible: name != ''"><input type="checkbox" checked="checked" data-bind="event: { change: function(){toggleColumn($element, $index());}}" /> <a class="pointer" data-bind="text: $data.name, click: function(){ scrollToColumn($element, $index()); }"></a></li>
           </ul>
         </div>
         <div class="span10">
           <div data-bind="css: resultsKlass">
-            <table class="table table-condensed">
+            <table class="table table-condensed resultTable">
               <thead>
-                <tr data-bind="foreach: {data: result.meta, afterAdd: waitForDatatable}">
-                  <th data-bind="text: $data.name"></th>
+                <tr data-bind="foreach: result.meta">
+                  <th data-bind="html: ($index() == 0 ? '&nbsp;' : $data.name), css: { 'sort-numeric': isNumericColumn($data.type), 'sort-date': isDateTimeColumn($data.type), 'sort-string': isStringColumn($data.type)}"></th>
                 </tr>
               </thead>
-              <tbody data-bind="foreach: {data: result.data, afterAdd: waitForDatatable}">
-                <tr data-bind="foreach: $data">
-                  <td data-bind="text: $data" class="nowrap"></td>
-                </tr>
+              <tbody>
               </tbody>
             </table>
             
@@ -762,12 +759,9 @@ ${ commonheader(_('Query'), app_name, user, "68px") | n,unicode }
     $(".assist-main").height($(window).height() - 230);
   }
 
-  var _datatableCreationTimeout = -1;
-  function waitForDatatable(el) {
-    if ($(el).is("tr") && $(el).parents("table").length > 0){
-      window.clearTimeout(_datatableCreationTimeout);
-      _datatableCreationTimeout = window.setTimeout(function(){
-        $(el).parents("table").dataTable({
+  function createDatatable(el, snippet) {
+        $(el).addClass("dt");
+        var _dt = $(el).dataTable({
         "bPaginate": false,
         "bLengthChange": false,
         "bInfo": false,
@@ -778,12 +772,12 @@ ${ commonheader(_('Query'), app_name, user, "68px") | n,unicode }
           "sZeroRecords": "${_('No matching records')}"
         },
         "fnDrawCallback": function (oSettings) {
-          $(el).parents("table").find(".dataTables_wrapper").jHueTableScroller({
+          $(el).parents(".dataTables_wrapper").jHueTableScroller({
             minHeight: $(window).height() - 400,
             heightAfterCorrection: 0
           });
 
-          $(el).parents("table").jHueTableExtender({
+          $(el).jHueTableExtender({
             fixedHeader: true,
             includeNavigator: false
           });
@@ -808,13 +802,12 @@ ${ commonheader(_('Query'), app_name, user, "68px") | n,unicode }
           heightAfterCorrection: 0
         });
 
-        $(el).parents("table").jHueTableExtender({
+        $(el).jHueTableExtender({
           fixedHeader: true,
           includeNavigator: false
         });
         $(".dataTables_filter").hide();
-      }, 100);
-    }
+    return _dt;
   }
 
   function toggleColumn(linkElement, index){
@@ -838,8 +831,40 @@ ${ commonheader(_('Query'), app_name, user, "68px") | n,unicode }
     }
   }
 
+  function isNumericColumn(type) {
+    return $.inArray(type, ['TINYINT_TYPE', 'SMALLINT_TYPE', 'INT_TYPE', 'BIGINT_TYPE', 'FLOAT_TYPE', 'DOUBLE_TYPE', 'DECIMAL_TYPE', 'TIMESTAMP_TYPE', 'DATE_TYPE']) > -1;
+  }
+
+  function isDateTimeColumn(type) {
+    return $.inArray(type, ['TIMESTAMP_TYPE', 'DATE_TYPE']) > -1;
+  }
+
+  function isStringColumn(type) {
+    return !isNumericColumn(type) && !isDateTimeColumn(type);
+  }
+
   $(document).ready(function(){
     resizeAssist();
+    $(document).on("executeStarted", function(e, snippet){
+      var _el = $("#snippet_"+snippet.id()).find(".resultTable");
+      if (_el.hasClass("dt")){
+        _el.removeClass("dt");
+        $("#eT" + snippet.id() + "jHueTableExtenderClonedContainer").remove();
+        _el.dataTable().fnClearTable();
+        _el.dataTable().fnDestroy();
+        _el.find("thead tr").empty();
+      }
+    });
+
+    $(document).on("renderData", function(e, options){
+      var _el = $("#snippet_"+options.snippet.id).find(".resultTable");
+      if (options.data.length > 0){
+        window.setTimeout(function(){
+          var _dt = createDatatable(_el, options.snippet);
+          _dt.fnAddData(options.data)
+        }, 10);
+      }
+    });
   });
 
 </script>
diff --git a/apps/spark/static/css/spark.css b/apps/spark/static/css/spark.css
index 7db3359..897594e 100644
--- a/apps/spark/static/css/spark.css
+++ b/apps/spark/static/css/spark.css
@@ -125,4 +125,8 @@
 
 .editable-empty, .editable-empty:hover {
   color: #DDD!important;
+}
+
+.results table tr td {
+  white-space: nowrap;
 }
\ No newline at end of file
diff --git a/apps/spark/static/js/spark.vm.js b/apps/spark/static/js/spark.vm.js
index 0d5ca3e..2924477 100644
--- a/apps/spark/static/js/spark.vm.js
+++ b/apps/spark/static/js/spark.vm.js
@@ -21,9 +21,19 @@ var Result = function (snippet, result) {
   self.id = ko.observable(typeof result.id != "undefined" && result.id != null ? result.id : UUID());
   self.type = ko.observable(typeof result.type != "undefined" && result.type != null ? result.type : 'table');
   self.handle = ko.observable({});
-  self.meta = ko.mapping.fromJS(typeof result.meta != "undefined" && result.meta != null ? result.meta : []);
-  self.data = ko.mapping.fromJS(typeof result.data != "undefined" && result.data != null ? result.data : []);
+  self.meta = ko.observableArray(typeof result.meta != "undefined" && result.meta != null ? result.meta : []);
+  self.meta.extend({ rateLimit: 50 });
+  self.data = ko.observableArray(typeof result.data != "undefined" && result.data != null ? result.data : []);
+  self.data.extend({ rateLimit: 50 });
   self.logs = ko.observable('');
+
+  self.meta.subscribe(function(val){
+    $(document).trigger("renderMeta", {data: val, snippet: snippet});
+  });
+
+  self.data.subscribe(function(val){
+    $(document).trigger("renderData", {data: val, snippet: snippet});
+  });
   
   if (typeof result.handle != "undefined" && result.handle != null) {
     $.each(result.handle, function(key, val) {
@@ -198,11 +208,12 @@ var Snippet = function (notebook, snippet) {
   };
   
   self.execute = function() {
-	$(".jHueNotify").hide();
-	logGA('/execute/' + self.type());	  
+    $(document).trigger("executeStarted", self);
+	  $(".jHueNotify").hide();
+	  logGA('/execute/' + self.type());
     
-	self.result.clear();
-	self.status('running');
+	  self.result.clear();
+	  self.status('running');
     
     $.post("/spark/api/execute", {
         notebook: ko.mapping.toJSON(notebook),
@@ -257,9 +268,11 @@ var Snippet = function (notebook, snippet) {
     }, function (data) {
  	  if (data.status == 0) {
  	    rows -= data.result.data.length;
+      data.result.meta.unshift({ type:"INT_TYPE", name:"", comment:null});
  	    self.result.meta(data.result.meta);
  	    $.each(data.result.data, function(index, row) {
- 	      self.result.data.push(row);  
+        row.unshift(index);
+ 	      self.result.data.push(row);
  	    });
          
         if (data.result.hasMore && rows > 0) {
diff --git a/desktop/core/static/ext/js/jquery/plugins/jquery.dataTables.1.8.2.min.js b/desktop/core/static/ext/js/jquery/plugins/jquery.dataTables.1.8.2.min.js
index 4280c6d..e6595da 100644
--- a/desktop/core/static/ext/js/jquery/plugins/jquery.dataTables.1.8.2.min.js
+++ b/desktop/core/static/ext/js/jquery/plugins/jquery.dataTables.1.8.2.min.js
@@ -3,14 +3,14 @@
  * Version:     1.8.2
  * Author:      Allan Jardine (www.sprymedia.co.uk)
  * Info:        www.datatables.net
- * 
+ *
  * Copyright 2008-2011 Allan Jardine, all rights reserved.
  *
  * This source file is free software, under either the GPL v2 license or a
  * BSD style license, as supplied with this software.
- * 
- * This source file is distributed in the hope that it will be useful, but 
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
+ *
+ * This source file is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
  */
 (function(i,za,p){i.fn.dataTableSettings=[];var D=i.fn.dataTableSettings;i.fn.dataTableExt={};var n=i.fn.dataTableExt;n.sVersion="1.8.2";n.sErrMode="alert";n.iApiIndex=0;n.oApi={};n.afnFiltering=[];n.aoFeatures=[];n.ofnSearch={};n.afnSortData=[];n.oStdClasses={sPagePrevEnabled:"paginate_enabled_previous",sPagePrevDisabled:"paginate_disabled_previous",sPageNextEnabled:"paginate_enabled_next",sPageNextDisabled:"paginate_disabled_next",sPageJUINext:"",sPageJUIPrev:"",sPageButton:"paginate_button",sPageButtonActive:"paginate_active",
-- 
1.7.9.5

