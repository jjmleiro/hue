From 55f197160fde44367ab73e472553b69099e9ced1 Mon Sep 17 00:00:00 2001
From: Erick Tryzelaar <erickt@cloudera.com>
Date: Fri, 19 Dec 2014 11:51:08 -0800
Subject: [PATCH 0164/1173] [desktop] Backport Django 1.5's
 ConditionalGetMiddleware to fix streaming bug

This fixes downloading csv files from beeswax.
---
 desktop/core/src/desktop/lib/export_csvxls.py |    9 ++++++
 desktop/core/src/desktop/middleware.py        |   38 +++++++++++++++++++++++++
 desktop/core/src/desktop/settings.py          |    5 +++-
 3 files changed, 51 insertions(+), 1 deletion(-)

diff --git a/desktop/core/src/desktop/lib/export_csvxls.py b/desktop/core/src/desktop/lib/export_csvxls.py
index 2e6f62a..b9a01ff 100644
--- a/desktop/core/src/desktop/lib/export_csvxls.py
+++ b/desktop/core/src/desktop/lib/export_csvxls.py
@@ -88,6 +88,15 @@ def make_response(generator, format, name, encoding=None):
   else:
     raise Exception("Unknown format: %s" % format)
 
+  # FIXME: this should be replaced with StreamingHttpResponse when we upgrade
+  # to Django 1.5+.
   resp = HttpResponse(generator, mimetype=mimetype)
   resp['Content-Disposition'] = 'attachment; filename=%s.%s' % (name, format)
+  resp.streaming = True
+
+  try:
+    del resp['Content-Length']
+  except KeyError:
+    pass
+
   return resp
diff --git a/desktop/core/src/desktop/middleware.py b/desktop/core/src/desktop/middleware.py
index 226e51d..6fe08f9 100644
--- a/desktop/core/src/desktop/middleware.py
+++ b/desktop/core/src/desktop/middleware.py
@@ -638,3 +638,41 @@ class EnsureSafeRedirectURLMiddleware(object):
     else:
       return response
 
+# FIXME: This was backported from Django 1.5 to work around streaming generator
+# responses incorrectly getting a length returned with the response. This can
+# be removed once we upgrade.
+class ConditionalGetMiddleware(object):
+    """
+    Handles conditional GET operations. If the response has a ETag or
+    Last-Modified header, and the request has If-None-Match or
+    If-Modified-Since, the response is replaced by an HttpNotModified.
+
+    Also sets the Date and Content-Length response-headers.
+    """
+    def process_response(self, request, response):
+        from django.utils.http import http_date
+
+        response['Date'] = http_date()
+        if not getattr(response, 'streaming', False) and not response.has_header('Content-Length'):
+            response['Content-Length'] = str(len(response.content))
+
+        if response.has_header('ETag'):
+            if_none_match = request.META.get('HTTP_IF_NONE_MATCH')
+            if if_none_match == response['ETag']:
+                # Setting the status is enough here. The response handling path
+                # automatically removes content for this status code (in
+                # http.conditional_content_removal()).
+                response.status_code = 304
+
+        if response.has_header('Last-Modified'):
+            if_modified_since = request.META.get('HTTP_IF_MODIFIED_SINCE')
+            if if_modified_since is not None:
+                if_modified_since = parse_http_date_safe(if_modified_since)
+            if if_modified_since is not None:
+                last_modified = parse_http_date_safe(response['Last-Modified'])
+                if last_modified is not None and last_modified <= if_modified_since:
+                    # Setting the status code is enough here (same reasons as
+                    # above).
+                    response.status_code = 304
+
+        return response
diff --git a/desktop/core/src/desktop/settings.py b/desktop/core/src/desktop/settings.py
index 9ad4c1e..5ceb380 100755
--- a/desktop/core/src/desktop/settings.py
+++ b/desktop/core/src/desktop/settings.py
@@ -129,7 +129,10 @@ MIDDLEWARE_CLASSES = [
     'django.middleware.transaction.TransactionMiddleware',
     # 'debug_toolbar.middleware.DebugToolbarMiddleware'
     'django.middleware.csrf.CsrfViewMiddleware',
-    'django.middleware.http.ConditionalGetMiddleware',
+
+    # FIXME: we can switch back to the django version when we upgrade to 1.5+
+    #'django.middleware.http.ConditionalGetMiddleware',
+    'desktop.middleware.ConditionalGetMiddleware',
 ]
 
 if os.environ.get(ENV_DESKTOP_DEBUG):
-- 
1.7.9.5

