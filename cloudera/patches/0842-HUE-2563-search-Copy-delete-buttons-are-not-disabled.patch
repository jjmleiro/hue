From 0766bf13cfb888cbb6b5b3bdf3d1ff1ef2c284e9 Mon Sep 17 00:00:00 2001
From: Enrico Berti <hello@enricoberti.com>
Date: Mon, 16 Feb 2015 12:53:57 +0100
Subject: [PATCH 0842/1173] HUE-2563 [search] Copy/delete buttons are not
 disabled on dashboard page when nothing is
 selected

Added property to keep track of at least one selected
---
 .../src/search/templates/admin_collections.mako    |    8 +--
 apps/search/static/js/collections.ko.js            |   54 ++++++++++++--------
 2 files changed, 36 insertions(+), 26 deletions(-)

diff --git a/apps/search/src/search/templates/admin_collections.mako b/apps/search/src/search/templates/admin_collections.mako
index d4e22de..a45647e 100644
--- a/apps/search/src/search/templates/admin_collections.mako
+++ b/apps/search/src/search/templates/admin_collections.mako
@@ -45,8 +45,8 @@ ${ commonheader(_('Search'), "search", user, "29px") | n,unicode }
       </%def>
 
       <%def name="actions()">
-        <a class="btn" data-bind="visible: collections().length > 0 && !isLoading(), click: $root.copyCollections, clickBubble: false"><i class="fa fa-files-o"></i> ${_('Copy')}</a>
-        <a class="btn" data-bind="visible: collections().length > 0 && !isLoading(), click: $root.markManyForDeletion, clickBubble: false"><i class="fa fa-times"></i> ${_('Delete')}</a>
+        <a data-bind="visible: collections().length > 0 && !isLoading(), click: $root.copyCollections, clickBubble: false, css: {'btn': true, 'disabled': ! atLeastOneSelected()}"><i class="fa fa-files-o"></i> ${_('Copy')}</a>
+        <a data-bind="visible: collections().length > 0 && !isLoading(), click: $root.markManyForDeletion, clickBubble: false, css: {'btn': true, 'disabled': ! atLeastOneSelected()}"><i class="fa fa-times"></i> ${_('Delete')}</a>
       </%def>
 
       <%def name="creation()">
@@ -172,11 +172,11 @@ ${ commonheader(_('Search'), "search", user, "29px") | n,unicode }
     $(document).on("collectionDeleted", function () {
       $("#deleteModal").modal("hide");
       $("#deleteModalBtn").button("reset");
-      $(document).trigger("info", "${ _("Dashboard deleted successfully.") }");
+      $(document).trigger("info", "${ _("Dashboard(s) deleted successfully.") }");
     });
 
     $(document).on("collectionCopied", function () {
-      $(document).trigger("info", "${ _("Dashboard copied successfully.") }");
+      $(document).trigger("info", "${ _("Dashboard(s) copied successfully.") }");
     });
 
     $(document).on("confirmDelete", function () {
diff --git a/apps/search/static/js/collections.ko.js b/apps/search/static/js/collections.ko.js
index 030c8de..6006f9b 100644
--- a/apps/search/static/js/collections.ko.js
+++ b/apps/search/static/js/collections.ko.js
@@ -79,6 +79,10 @@ var SearchCollectionsModel = function (props) {
     });
   }, self);
 
+  self.atLeastOneSelected = ko.computed(function() {
+    return self.selectedCollections().length >= 1;
+  });
+
   self.selectedImportableCollections = ko.computed(function () {
     return ko.utils.arrayFilter(self.importableCollections(), function (imp) {
       return imp.selected();
@@ -115,34 +119,40 @@ var SearchCollectionsModel = function (props) {
   };
 
   self.markManyForDeletion = function (collections) {
-    self.collectionToDelete = collections;
-    $(document).trigger("confirmDelete")
+    if (self.atLeastOneSelected()){
+      self.collectionToDelete = collections;
+      $(document).trigger("confirmDelete")
+    }
   };
 
   self.deleteCollections = function () {
-    self.isLoading(true);
-    $(document).trigger("deleting");
-    $.post(self.DELETE_URL,
-      {
-        collections: ko.mapping.toJSON(self.selectedCollections())
-      },
-      function (data) {
-        self.updateCollections();
-      }, "json"
-    ).fail(function (xhr, textStatus, errorThrown) {});
-    $(document).trigger("collectionDeleted");
+    if (self.atLeastOneSelected()){
+      self.isLoading(true);
+      $(document).trigger("deleting");
+      $.post(self.DELETE_URL,
+        {
+          collections: ko.mapping.toJSON(self.selectedCollections())
+        },
+        function (data) {
+          self.updateCollections();
+        }, "json"
+      ).fail(function (xhr, textStatus, errorThrown) {});
+      $(document).trigger("collectionDeleted");
+    }
   };
 
   self.copyCollections = function (collections) {
-    $(document).trigger("copying");
-    $.post(self.COPY_URL,
-      {
-        collections: ko.mapping.toJSON(self.selectedCollections())
-      }, function (data) {
-        self.updateCollections();
-      }, "json"
-    ).fail(function (xhr, textStatus, errorThrown) {});
-    $(document).trigger("collectionCopied");
+    if (self.atLeastOneSelected()){
+      $(document).trigger("copying");
+      $.post(self.COPY_URL,
+        {
+          collections: ko.mapping.toJSON(self.selectedCollections())
+        }, function (data) {
+          self.updateCollections();
+        }, "json"
+      ).fail(function (xhr, textStatus, errorThrown) {});
+      $(document).trigger("collectionCopied");
+    }
   };
 
   self.updateCollections = function () {
-- 
1.7.9.5

