From f7e6e57756f4e87c5dc01ac0a0702481c4d48598 Mon Sep 17 00:00:00 2001
From: Enrico Berti <hello@enricoberti.com>
Date: Wed, 17 Dec 2014 15:25:05 +0100
Subject: [PATCH 0342/1173] [oozie] Restyled decision and initial support for
 large scrolling workflows

---
 .../oozie/templates/editor/workflow_editor.mako    |  135 +++-----
 .../src/desktop/templates/common_dashboard.mako    |    2 +-
 desktop/core/static/js/ko.common-dashboard.js      |  333 ++++++++++++++++++++
 desktop/core/static/js/ko.layout.js                |  327 -------------------
 4 files changed, 385 insertions(+), 412 deletions(-)
 create mode 100644 desktop/core/static/js/ko.common-dashboard.js
 delete mode 100644 desktop/core/static/js/ko.layout.js

diff --git a/apps/oozie/src/oozie/templates/editor/workflow_editor.mako b/apps/oozie/src/oozie/templates/editor/workflow_editor.mako
index 4b67083..af56745 100644
--- a/apps/oozie/src/oozie/templates/editor/workflow_editor.mako
+++ b/apps/oozie/src/oozie/templates/editor/workflow_editor.mako
@@ -195,26 +195,6 @@ ${ commonheader(_("Workflow Editor"), "Oozie", user, "40px") | n,unicode }
   </div>
 
 
-  <div data-bind="visible: isEditing() && previewColumns() != '' && columns().length == 0, css:{'with-top-margin': isEditing()}">
-  <div class="container-fluid">
-    <div class="row-fluid" data-bind="visible: previewColumns() == 'oneSixthLeft'">
-      <div class="span2 preview-row"></div>
-      <div class="span10 preview-row"></div>
-    </div>
-    <div class="row-fluid" data-bind="visible: previewColumns() == 'full'">
-      <div class="span12 preview-row">
-      </div>
-    </div>
-    <div class="row-fluid" data-bind="visible: previewColumns() == 'magic'">
-      <div class="span12 preview-row">
-        <div style="text-align: center; color:#EEE; font-size: 180px; margin-top: 80px">
-          <i class="fa fa-magic"></i>
-        </div>
-      </div>
-    </div>
-  </div>
-</div>
-
 <div data-bind="css: {'dashboard': true, 'readonly': ! isEditing()}">
   <div class="container-fluid">
     <div class="row-fluid" data-bind="template: { name: 'column-template', foreach: columns}">
@@ -253,7 +233,7 @@ ${ commonheader(_("Workflow Editor"), "Oozie", user, "40px") | n,unicode }
 
 
 <script type="text/html" id="internal-column-template">
-  <div data-bind="css: klass()" style="min-height: 50px !important;">
+  <div data-bind="css: klass(), style: {'minHeight': '50px !important', 'width': percWidth() + '%' }">
     <div class="container-fluid" data-bind="visible: $root.isEditing()">
       <div data-bind="visible: ! enableOozieDropOnBefore(), css: {'drop-target drop-target-disabled': true, 'is-editing': $root.isEditing}"></div>
       <div data-bind="visible: enableOozieDropOnBefore, css: {'drop-target': true, 'is-editing': $root.isEditing}, droppable: {enabled: $root.isEditing, onDrop: function(){ var _w = $root.addDraggedWidget($data, true); widgetDraggedAdditionalHandler(_w); } }"></div>
@@ -294,7 +274,7 @@ ${ commonheader(_("Workflow Editor"), "Oozie", user, "40px") | n,unicode }
       </div>
       <div data-bind="css: {'span1': true, 'readonly': ! $root.isEditing()}"></div>
     </div>
-    <div class="row-fluid">
+    <div class="row-fluid" data-bind="style: {'width': columns().length < 5 ? '100%' : (columns().length * 25)+'%' }">
       <div data-bind="css: {'span1': true, 'offset3andhalf': ($root.isEditing() && $parents.length <= 2 && columns().length == 0), 'offset4': (!$root.isEditing() && $parents.length <= 2 && columns().length == 0), 'readonly': ! $root.isEditing()}">
         <div data-bind="visible: $root.isEditing() && enableOozieDropOnSide() && !($data.widgets().length > 0 && ['join-widget', 'decision-widget'].indexOf($data.widgets()[0].widgetType()) > -1), css: {'drop-target drop-target-side': true, 'is-editing': $root.isEditing}, droppable: {enabled: $root.isEditing, onDrop: function(){ var _w = $root.addSideDraggedWidget($data, true); widgetDraggedAdditionalHandler(_w); } }"></div>
       </div>
@@ -424,17 +404,11 @@ ${ commonheader(_("Workflow Editor"), "Oozie", user, "40px") | n,unicode }
 
 <script type="text/html" id="fork-widget">
   <!-- ko if: $root.workflow.getNodeById(id()) -->
-  <div class="row-fluid" data-bind="with: $root.workflow.getNodeById(id())" style="min-height: 80px">
-    <div data-bind="visible: $root.isEditing" style="margin-bottom: 20px">
-    </div>
-
-    <div>
-      To:
-      <span data-bind="foreach: children">
-        <span data-bind="text: $data['to']" /></span>
-      </span>
+  <div class="row-fluid" data-bind="with: $root.workflow.getNodeById(id())" style="min-height: 40px">
+    <div class="big-icon"><i class="fa fa-sitemap"></i></div>
+    <div data-bind="visible: $root.isEditing" style="padding: 10px">
+      <a class="pointer" data-bind="click: function() { $root.convertToDecision($parent, $data) }"><i class="fa fa-magic"></i> ${_('Convert to Decision')}</a>
     </div>
-    <a class="pointer" data-bind="click: function() { $root.convertToDecision($parent, $data) }">Convert to Decision</a>
   </div>
   <!-- /ko -->
 </script>
@@ -442,15 +416,8 @@ ${ commonheader(_("Workflow Editor"), "Oozie", user, "40px") | n,unicode }
 
 <script type="text/html" id="join-widget">
   <!-- ko if: $root.workflow.getNodeById(id()) -->
-  <div class="row-fluid" data-bind="with: $root.workflow.getNodeById(id())" style="min-height: 80px">
-    <div data-bind="visible: $root.isEditing" style="margin-bottom: 20px">
-    </div>
-
-    <div>
-      <!-- ko if: children().length == 1 -->
-      Then --> <span data-bind="text: children()[0]['to']"></span>
-      <!-- /ko -->
-    </div>
+  <div class="row-fluid" data-bind="with: $root.workflow.getNodeById(id())" style="min-height: 40px">
+    <div class="big-icon"><i class="fa fa-sitemap fa-rotate-180"></i></div>
   </div>
   <!-- /ko -->
 </script>
@@ -458,21 +425,21 @@ ${ commonheader(_("Workflow Editor"), "Oozie", user, "40px") | n,unicode }
 
 <script type="text/html" id="decision-widget">
   <!-- ko if: $root.workflow.getNodeById(id()) -->
-  <div class="row-fluid" data-bind="with: $root.workflow.getNodeById(id())" style="min-height: 80px">
-    <div data-bind="visible: $root.isEditing" style="margin-bottom: 20px">
-    </div>
+  <div class="row-fluid" data-bind="with: $root.workflow.getNodeById(id())" style="min-height: 40px">
+    <div class="big-icon" data-bind="visible: ! $root.isEditing()"><i class="fa fa-magic"></i></div>
     
     <div data-bind="visible: $root.isEditing">
-      To:
-      <span data-bind="foreach: children">
+      <ul data-bind="foreach: children" class="unstyled">
+        <li>${ _('To') }
         <select data-bind="options: $root.workflow.nodeIds,
                      optionsText: function(item) {return $root.workflow.nodeNamesMapping()[item]; },
                      value: $data['to']
                      ">
         </select>      
-        if <input data-bind="value: $data['condition']" />
-      </span>
-      <a>${ _('Jump to another node') } <i class="fa fa-plus"></i></a>
+        ${ _('if') } <input data-bind="value: $data['condition']" />
+        </li>
+      </ul>
+      <a data-bind="click: function(){  children.push({'to': '', 'condition': ''});}">${ _('Jump to another node') } <i class="fa fa-plus"></i></a>
     </div>
   </div>
   <!-- /ko -->
@@ -1607,48 +1574,48 @@ ${ dashboard.import_bindings() }
   function linkWidgets(fromId, toId) {
     var _from = $("#wdg_" + (typeof fromId == "function" ? fromId() : fromId));
     var _to = $("#wdg_" + (typeof toId == "function" ? toId() : toId));
+    if (_from.length > 0 && _to.length > 0){
+      var _fromCenter = {
+        x: _from.position().left + _from.outerWidth() / 2,
+        y: _from.position().top + _from.outerHeight() + 3
+      }
 
-    var _fromCenter = {
-      x: _from.position().left + _from.outerWidth() / 2,
-      y: _from.position().top + _from.outerHeight() + 3
-    }
-
-    var _toCenter = {
-      x: _to.position().left + _to.outerWidth() / 2,
-      y: _to.position().top - 5
-    }
+      var _toCenter = {
+        x: _to.position().left + _to.outerWidth() / 2,
+        y: _to.position().top - 5
+      }
 
-    var _curveCoords = {};
+      var _curveCoords = {};
 
-    if (_fromCenter.x == _toCenter.x) {
-      _curveCoords.x = _fromCenter.x;
-      _curveCoords.y = _fromCenter.y + (_toCenter.y - _fromCenter.y) / 2;
-    }
-    else {
-      if (_fromCenter.x > _toCenter.x) {
-        _fromCenter.x = _fromCenter.x - 5;
-        _toCenter.x = _toCenter.x + 5;
+      if (_fromCenter.x == _toCenter.x) {
+        _curveCoords.x = _fromCenter.x;
+        _curveCoords.y = _fromCenter.y + (_toCenter.y - _fromCenter.y) / 2;
       }
       else {
-        _fromCenter.x = _fromCenter.x + 5;
-        _toCenter.x = _toCenter.x - 5;
+        if (_fromCenter.x > _toCenter.x) {
+          _fromCenter.x = _fromCenter.x - 5;
+          _toCenter.x = _toCenter.x + 5;
+        }
+        else {
+          _fromCenter.x = _fromCenter.x + 5;
+          _toCenter.x = _toCenter.x - 5;
+        }
+        _curveCoords.x = _fromCenter.x - (_fromCenter.x - _toCenter.x) / 4;
+        _curveCoords.y = _fromCenter.y + (_toCenter.y - _fromCenter.y) / 2;
       }
-      _curveCoords.x = _fromCenter.x - (_fromCenter.x - _toCenter.x) / 4;
-      _curveCoords.y = _fromCenter.y + (_toCenter.y - _fromCenter.y) / 2;
-    }
-
-    $(document.body).curvedArrow({
-      p0x: _fromCenter.x,
-      p0y: _fromCenter.y,
-      p1x: _curveCoords.x,
-      p1y: _curveCoords.y,
-      p2x: _toCenter.x,
-      p2y: _toCenter.y,
-      lineWidth: 2,
-      size: 10,
-      strokeStyle: viewModel.isEditing()?'#e5e5e5':'#dddddd'
-    });
 
+      $(document.body).curvedArrow({
+        p0x: _fromCenter.x,
+        p0y: _fromCenter.y,
+        p1x: _curveCoords.x,
+        p1y: _curveCoords.y,
+        p2x: _toCenter.x,
+        p2y: _toCenter.y,
+        lineWidth: 2,
+        size: 10,
+        strokeStyle: viewModel.isEditing()?'#e5e5e5':'#dddddd'
+      });
+    }
   }
 
   function drawArrows(){
diff --git a/desktop/core/src/desktop/templates/common_dashboard.mako b/desktop/core/src/desktop/templates/common_dashboard.mako
index bc636e4..1d63156 100644
--- a/desktop/core/src/desktop/templates/common_dashboard.mako
+++ b/desktop/core/src/desktop/templates/common_dashboard.mako
@@ -27,7 +27,7 @@
 
 <%def name="import_layout()">
   <link rel="stylesheet" href="/static/css/common_dashboard.css">
-  <script src="/static/js/ko.layout.js" type="text/javascript" charset="utf-8"></script>
+  <script src="/static/js/ko.common-dashboard.js" type="text/javascript" charset="utf-8"></script>
   <script src="/static/ext/js/jquery/plugins/jquery-ui-1.10.4.draggable-droppable-sortable.min.js" type="text/javascript" charset="utf-8"></script>
   <script src="/static/ext/js/knockout-min.js" type="text/javascript" charset="utf-8"></script>
   <script src="/static/ext/js/knockout.mapping-2.3.2.js" type="text/javascript" charset="utf-8"></script>
diff --git a/desktop/core/static/js/ko.common-dashboard.js b/desktop/core/static/js/ko.common-dashboard.js
new file mode 100644
index 0000000..b098498
--- /dev/null
+++ b/desktop/core/static/js/ko.common-dashboard.js
@@ -0,0 +1,333 @@
+// Licensed to Cloudera, Inc. under one
+// or more contributor license agreements.  See the NOTICE file
+// distributed with this work for additional information
+// regarding copyright ownership.  Cloudera, Inc. licenses this file
+// to you under the Apache License, Version 2.0 (the
+// "License"); you may not use this file except in compliance
+// with the License.  You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+function s4() {
+  return Math.floor((1 + Math.random()) * 0x10000)
+      .toString(16)
+      .substring(1);
+}
+
+function UUID() {
+  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
+}
+
+var Column = function (size, rows) {
+  var self = this;
+  self.id = ko.observable(UUID());
+  self.size = ko.observable(size);
+  self.rows = ko.observableArray(rows);
+  self.oozieStartRow = ko.computed(function () {
+    var _row = null;
+    ko.utils.arrayForEach(self.rows(), function (row) {
+      if ((row.widgets().length > 0 && row.widgets()[0].id() == "3f107997-04cc-8733-60a9-a4bb62cebffc")) {
+        _row = row;
+      }
+    });
+    return _row;
+  }, self);
+
+  self.oozieEndRow = ko.computed(function () {
+    var _row = null;
+    ko.utils.arrayForEach(self.rows(), function (row) {
+      if ((row.widgets().length > 0 && row.widgets()[0].id() == "33430f0f-ebfa-c3ec-f237-3e77efa03d0a")) {
+        _row = row;
+      }
+    });
+    return _row;
+  }, self);
+
+  self.oozieKillRow = ko.computed(function () {
+    var _row = null;
+    ko.utils.arrayForEach(self.rows(), function (row) {
+      if ((row.widgets().length > 0 && row.widgets()[0].id() == "17c9c895-5a16-7443-bb81-f34b30b21548")) {
+        _row = row;
+      }
+    });
+    return _row;
+  }, self);
+
+
+  self.oozieRows = ko.computed(function () {
+    var _rows = [];
+    ko.utils.arrayForEach(self.rows(), function (row) {
+      if ((row.widgets().length > 0 && ["3f107997-04cc-8733-60a9-a4bb62cebffc", "33430f0f-ebfa-c3ec-f237-3e77efa03d0a", "17c9c895-5a16-7443-bb81-f34b30b21548"].indexOf(row.widgets()[0].id()) == -1) || row.widgets().length == 0) {
+        _rows.push(row);
+      }
+    });
+    return _rows;
+  }, self);
+
+  self.enableOozieDropOnBefore = ko.observable(true);
+  self.enableOozieDropOnAfter = ko.observable(true);
+
+  self.drops = ko.observableArray(["temp"]);
+  self.klass = ko.computed(function () {
+    return "card card-home card-column span" + self.size();
+  });
+  self.percWidth = ko.observable();
+  self.addEmptyRow = function (atBeginning, atIndex) {
+    return self.addRow(null, atBeginning, atIndex);
+  };
+  self.addRow = function (row, atBeginning, atIndex) {
+    if (typeof row == "undefined" || row == null) {
+      row = new Row([], viewModel); // Hacky but needed when a new row is deleted
+    }
+
+    if (typeof atIndex != "undefined" && atIndex != null) {
+      self.rows.splice(atIndex, 0, row);
+    }
+    else {
+      if (typeof atBeginning == "undefined" || atBeginning == null || !atBeginning) {
+        self.rows.push(row);
+      }
+      else {
+        self.rows.unshift(row);
+      }
+    }
+    return row;
+  };
+}
+
+var Row = function (widgets, vm, columns) {
+  var self = this;
+  self.id = ko.observable(UUID());
+  self.widgets = ko.observableArray(widgets);
+  self.columns = ko.observableArray(columns ? columns : []);
+  self.columns.subscribe(function(val){
+    self.columns().forEach(function(col){
+      col.percWidth((100 - self.columns().length * 0.5) / self.columns().length);
+    });
+  });
+
+  self.enableOozieDrop = ko.computed(function(){
+    return vm.isEditing && vm.isEditing() && self.widgets && self.widgets().length < 1
+  });
+
+  self.enableOozieDropOnBefore = ko.observable(true);
+  self.enableOozieDropOnSide = ko.observable(true);
+
+  self.addWidget = function (widget) {
+    self.widgets.push(widget);
+  };
+
+  self.addEmptyColumn = function (atBeginning) {
+    if (self.columns().length == 0){
+      var _col = self.addColumn(null, atBeginning);
+      if (self.widgets().length > 0){
+        var _row = _col.addEmptyRow();
+        self.widgets().forEach(function(widget){
+          _row.addWidget(widget);
+        });
+        self.widgets([]);
+      }
+    }
+    return self.addColumn(null, atBeginning);
+  };
+
+  self.addColumn = function (column, atBeginning) {
+    if (typeof column == "undefined" || column == null) {
+      var _size = Math.max(1, Math.floor(12 / (self.columns().length + 1)));
+      column = new Column(_size, []); // Hacky but needed when a new row is deleted
+      self.columns().forEach(function(col){
+        col.size(_size);
+      });
+    }
+    if (typeof atBeginning == "undefined" || atBeginning == null || ! atBeginning) {
+      self.columns.push(column);
+    }
+    else {
+      self.columns.unshift(column);
+    }
+    return column;
+  };
+
+  self.move = function (from, to) {
+    try {
+      vm.columns()[to].addRow(self);
+      vm.columns()[from].rows.remove(self);
+    }
+    catch (exception) {
+    }
+  }
+
+  self.moveDown = function (col, row) {
+    var _i = col.rows().indexOf(row);
+    if (_i < col.rows().length - 1) {
+      var _arr = col.rows();
+      col.rows.splice(_i, 2, _arr[_i + 1], _arr[_i]);
+    }
+  }
+
+  self.moveUp = function (col, row) {
+    var _i = col.rows().indexOf(row);
+    if (_i >= 1) {
+      var _arr = col.rows();
+      col.rows.splice(_i - 1, 2, _arr[_i], _arr[_i - 1]);
+    }
+  }
+
+  self.remove = function (col, row) {
+    $.each(self.columns(), function (i, column) {
+      $.each(column.rows(), function (j, row) {
+        $.each(row.widgets(), function (k, widget) {
+          vm.removeWidget(widget);
+        });
+      });
+    });
+
+    $.each(self.widgets(), function (i, widget) {
+      vm.removeWidget(widget);
+    });
+    col.rows.remove(row);
+  }
+
+  self.autosizeWidgets = function () {
+    $.each(self.widgets(), function (i, widget) {
+      widget.size(Math.floor(12 / self.widgets().length));
+    });
+  }
+}
+
+
+// A widget is generic. It has an id that refer to another object (e.g. facet) with the same id.
+var Widget = function (params) {
+  var self = this;
+  self.size = ko.observable(params.size).extend({ numeric: 0 });
+
+  self.name = ko.observable(params.name);
+  self.id = ko.observable(params.id);
+  self.widgetType = ko.observable(typeof params.widgetType != "undefined" && params.widgetType != null ? params.widgetType : "empty-widget");
+  self.properties = ko.observable(typeof params.properties != "undefined" && params.properties != null ? params.properties : {});
+  self.offset = ko.observable(typeof params.offset != "undefined" && params.offset != null ? params.offset : 0).extend({ numeric: 0 });
+  self.isLoading = ko.observable(typeof params.loading != "undefined" && params.loading != null ? params.loading : false);
+
+  self.oozieMovable = ko.computed(function() {
+    return ["end-widget", "start-widget", "fork-widget", "decision-widget", "kill-widget", "join-widget"].indexOf(self.widgetType()) == - 1
+  });
+
+  self.oozieExpanded = ko.observable(false);
+
+  self.klass = ko.computed(function () {
+    return "card card-widget span" + self.size() + (self.offset() * 1 > 0 ? " offset" + self.offset() : "");
+  });
+
+  self.expand = function () {
+    self.size(self.size() + 1);
+    $("#wdg_" + self.id()).trigger("resize");
+  }
+
+  self.compress = function () {
+    self.size(self.size() - 1);
+    $("#wdg_" + self.id()).trigger("resize");
+  }
+
+  self.moveLeft = function () {
+    self.offset(self.offset() - 1);
+  }
+
+  self.moveRight = function () {
+    self.offset(self.offset() + 1);
+  }
+
+  self.remove = function (row, widget) {
+    if (params.vm != null) {
+      params.vm.removeWidget(widget);
+    }
+    row.widgets.remove(widget);
+  }
+};
+
+Widget.prototype.clone = function () {
+  return new Widget({
+    size: this.size(),
+    id: UUID(),
+    name: this.name(),
+    widgetType: this.widgetType()
+  });
+};
+
+function fullLayout(vm) {
+  setLayout([12], vm);
+}
+
+function oneSixthLeftLayout(vm) {
+  setLayout([2, 10], vm);
+}
+
+function oneFourthLeftLayout(vm) {
+  setLayout([3, 9], vm);
+}
+
+function oneThirdLeftLayout(vm) {
+  setLayout([4, 8], vm);
+}
+
+function halfHalfLayout(vm) {
+  setLayout([6, 6], vm);
+}
+
+function oneThirdRightLayout(vm) {
+  setLayout([8, 4], vm);
+}
+
+function oneFourthRightLayout(vm) {
+  setLayout([9, 3], vm);
+}
+
+function oneSixthRightLayout(vm) {
+  setLayout([10, 2], vm);
+}
+
+
+function setLayout(colSizes, vm) {
+  // Save previous widgets
+  var _allRows = [];
+  $(vm.columns()).each(function (cnt, col) {
+    var _tRows = [];
+    $(col.rows()).each(function (icnt, row) {
+      if (row.widgets().length > 0 || (typeof vm.isNested != "undefined" && vm.isNested())) {
+        _tRows.push(row);
+      }
+    });
+    _allRows = _allRows.concat(_tRows);
+  });
+
+  var _cols = [];
+  var _highestCol = {
+    idx: -1,
+    size: -1
+  };
+  $(colSizes).each(function (cnt, size) {
+    _cols.push(new Column(size, []));
+    if (size > _highestCol.size) {
+      _highestCol.idx = cnt;
+      _highestCol.size = size;
+    }
+  });
+  if (_allRows.length > 0 && _highestCol.idx > -1) {
+    _cols[_highestCol.idx].rows(_allRows);
+  }
+
+  $(_cols).each(function (cnt, col) {
+    if (col.rows().length == 0) {
+      col.rows([new Row([], vm)]);
+    }
+  });
+
+  vm.columns(_cols);
+
+  $(document).trigger("setLayout");
+}
\ No newline at end of file
diff --git a/desktop/core/static/js/ko.layout.js b/desktop/core/static/js/ko.layout.js
deleted file mode 100644
index 741f444..0000000
--- a/desktop/core/static/js/ko.layout.js
+++ /dev/null
@@ -1,327 +0,0 @@
-// Licensed to Cloudera, Inc. under one
-// or more contributor license agreements.  See the NOTICE file
-// distributed with this work for additional information
-// regarding copyright ownership.  Cloudera, Inc. licenses this file
-// to you under the Apache License, Version 2.0 (the
-// "License"); you may not use this file except in compliance
-// with the License.  You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-function s4() {
-  return Math.floor((1 + Math.random()) * 0x10000)
-      .toString(16)
-      .substring(1);
-}
-
-function UUID() {
-  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
-}
-
-var Column = function (size, rows) {
-  var self = this;
-  self.id = ko.observable(UUID());
-  self.size = ko.observable(size);
-  self.rows = ko.observableArray(rows);
-  self.oozieStartRow = ko.computed(function () {
-    var _row = null;
-    ko.utils.arrayForEach(self.rows(), function (row) {
-      if ((row.widgets().length > 0 && row.widgets()[0].id() == "3f107997-04cc-8733-60a9-a4bb62cebffc")) {
-        _row = row;
-      }
-    });
-    return _row;
-  }, self);
-
-  self.oozieEndRow = ko.computed(function () {
-    var _row = null;
-    ko.utils.arrayForEach(self.rows(), function (row) {
-      if ((row.widgets().length > 0 && row.widgets()[0].id() == "33430f0f-ebfa-c3ec-f237-3e77efa03d0a")) {
-        _row = row;
-      }
-    });
-    return _row;
-  }, self);
-
-  self.oozieKillRow = ko.computed(function () {
-    var _row = null;
-    ko.utils.arrayForEach(self.rows(), function (row) {
-      if ((row.widgets().length > 0 && row.widgets()[0].id() == "17c9c895-5a16-7443-bb81-f34b30b21548")) {
-        _row = row;
-      }
-    });
-    return _row;
-  }, self);
-
-
-  self.oozieRows = ko.computed(function () {
-    var _rows = [];
-    ko.utils.arrayForEach(self.rows(), function (row) {
-      if ((row.widgets().length > 0 && ["3f107997-04cc-8733-60a9-a4bb62cebffc", "33430f0f-ebfa-c3ec-f237-3e77efa03d0a", "17c9c895-5a16-7443-bb81-f34b30b21548"].indexOf(row.widgets()[0].id()) == -1) || row.widgets().length == 0) {
-        _rows.push(row);
-      }
-    });
-    return _rows;
-  }, self);
-
-  self.enableOozieDropOnBefore = ko.observable(true);
-  self.enableOozieDropOnAfter = ko.observable(true);
-
-  self.drops = ko.observableArray(["temp"]);
-  self.klass = ko.computed(function () {
-    return "card card-home card-column span" + self.size();
-  });
-  self.addEmptyRow = function (atBeginning, atIndex) {
-    return self.addRow(null, atBeginning, atIndex);
-  };
-  self.addRow = function (row, atBeginning, atIndex) {
-    if (typeof row == "undefined" || row == null) {
-      row = new Row([], viewModel); // Hacky but needed when a new row is deleted
-    }
-
-    if (typeof atIndex != "undefined" && atIndex != null) {
-      self.rows.splice(atIndex, 0, row);
-    }
-    else {
-      if (typeof atBeginning == "undefined" || atBeginning == null || !atBeginning) {
-        self.rows.push(row);
-      }
-      else {
-        self.rows.unshift(row);
-      }
-    }
-    return row;
-  };
-}
-
-var Row = function (widgets, vm, columns) {
-  var self = this;
-  self.id = ko.observable(UUID());
-  self.widgets = ko.observableArray(widgets);
-  self.columns = ko.observableArray(columns ? columns : []);
-
-  self.enableOozieDrop = ko.computed(function(){
-    return vm.isEditing && vm.isEditing() && self.widgets && self.widgets().length < 1
-  });
-
-  self.enableOozieDropOnBefore = ko.observable(true);
-  self.enableOozieDropOnSide = ko.observable(true);
-
-  self.addWidget = function (widget) {
-    self.widgets.push(widget);
-  };
-
-  self.addEmptyColumn = function (atBeginning) {
-    if (self.columns().length == 0){
-      var _col = self.addColumn(null, atBeginning);
-      if (self.widgets().length > 0){
-        var _row = _col.addEmptyRow();
-        self.widgets().forEach(function(widget){
-          _row.addWidget(widget);
-        });
-        self.widgets([]);
-      }
-    }
-    return self.addColumn(null, atBeginning);
-  };
-
-  self.addColumn = function (column, atBeginning) {
-    if (typeof column == "undefined" || column == null) {
-      var _size = Math.max(1, Math.floor(12 / (self.columns().length + 1)));
-      column = new Column(_size, []); // Hacky but needed when a new row is deleted
-      self.columns().forEach(function(col){
-        col.size(_size);
-      });
-    }
-    if (typeof atBeginning == "undefined" || atBeginning == null || ! atBeginning) {
-      self.columns.push(column);
-    }
-    else {
-      self.columns.unshift(column);
-    }
-    return column;
-  };
-
-  self.move = function (from, to) {
-    try {
-      vm.columns()[to].addRow(self);
-      vm.columns()[from].rows.remove(self);
-    }
-    catch (exception) {
-    }
-  }
-
-  self.moveDown = function (col, row) {
-    var _i = col.rows().indexOf(row);
-    if (_i < col.rows().length - 1) {
-      var _arr = col.rows();
-      col.rows.splice(_i, 2, _arr[_i + 1], _arr[_i]);
-    }
-  }
-
-  self.moveUp = function (col, row) {
-    var _i = col.rows().indexOf(row);
-    if (_i >= 1) {
-      var _arr = col.rows();
-      col.rows.splice(_i - 1, 2, _arr[_i], _arr[_i - 1]);
-    }
-  }
-
-  self.remove = function (col, row) {
-    $.each(self.columns(), function (i, column) {
-      $.each(column.rows(), function (j, row) {
-        $.each(row.widgets(), function (k, widget) {
-          vm.removeWidget(widget);
-        });
-      });
-    });
-
-    $.each(self.widgets(), function (i, widget) {
-      vm.removeWidget(widget);
-    });
-    col.rows.remove(row);
-  }
-
-  self.autosizeWidgets = function () {
-    $.each(self.widgets(), function (i, widget) {
-      widget.size(Math.floor(12 / self.widgets().length));
-    });
-  }
-}
-
-
-// A widget is generic. It has an id that refer to another object (e.g. facet) with the same id.
-var Widget = function (params) {
-  var self = this;
-  self.size = ko.observable(params.size).extend({ numeric: 0 });
-
-  self.name = ko.observable(params.name);
-  self.id = ko.observable(params.id);
-  self.widgetType = ko.observable(typeof params.widgetType != "undefined" && params.widgetType != null ? params.widgetType : "empty-widget");
-  self.properties = ko.observable(typeof params.properties != "undefined" && params.properties != null ? params.properties : {});
-  self.offset = ko.observable(typeof params.offset != "undefined" && params.offset != null ? params.offset : 0).extend({ numeric: 0 });
-  self.isLoading = ko.observable(typeof params.loading != "undefined" && params.loading != null ? params.loading : false);
-
-  self.oozieMovable = ko.computed(function() {
-    return ["end-widget", "start-widget", "fork-widget", "decision-widget", "kill-widget", "join-widget"].indexOf(self.widgetType()) == - 1
-  });
-
-  self.oozieExpanded = ko.observable(false);
-
-  self.klass = ko.computed(function () {
-    return "card card-widget span" + self.size() + (self.offset() * 1 > 0 ? " offset" + self.offset() : "");
-  });
-
-  self.expand = function () {
-    self.size(self.size() + 1);
-    $("#wdg_" + self.id()).trigger("resize");
-  }
-
-  self.compress = function () {
-    self.size(self.size() - 1);
-    $("#wdg_" + self.id()).trigger("resize");
-  }
-
-  self.moveLeft = function () {
-    self.offset(self.offset() - 1);
-  }
-
-  self.moveRight = function () {
-    self.offset(self.offset() + 1);
-  }
-
-  self.remove = function (row, widget) {
-    if (params.vm != null) {
-      params.vm.removeWidget(widget);
-    }
-    row.widgets.remove(widget);
-  }
-};
-
-Widget.prototype.clone = function () {
-  return new Widget({
-    size: this.size(),
-    id: UUID(),
-    name: this.name(),
-    widgetType: this.widgetType()
-  });
-};
-
-function fullLayout(vm) {
-  setLayout([12], vm);
-}
-
-function oneSixthLeftLayout(vm) {
-  setLayout([2, 10], vm);
-}
-
-function oneFourthLeftLayout(vm) {
-  setLayout([3, 9], vm);
-}
-
-function oneThirdLeftLayout(vm) {
-  setLayout([4, 8], vm);
-}
-
-function halfHalfLayout(vm) {
-  setLayout([6, 6], vm);
-}
-
-function oneThirdRightLayout(vm) {
-  setLayout([8, 4], vm);
-}
-
-function oneFourthRightLayout(vm) {
-  setLayout([9, 3], vm);
-}
-
-function oneSixthRightLayout(vm) {
-  setLayout([10, 2], vm);
-}
-
-
-function setLayout(colSizes, vm) {
-  // Save previous widgets
-  var _allRows = [];
-  $(vm.columns()).each(function (cnt, col) {
-    var _tRows = [];
-    $(col.rows()).each(function (icnt, row) {
-      if (row.widgets().length > 0 || (typeof vm.isNested != "undefined" && vm.isNested())) {
-        _tRows.push(row);
-      }
-    });
-    _allRows = _allRows.concat(_tRows);
-  });
-
-  var _cols = [];
-  var _highestCol = {
-    idx: -1,
-    size: -1
-  };
-  $(colSizes).each(function (cnt, size) {
-    _cols.push(new Column(size, []));
-    if (size > _highestCol.size) {
-      _highestCol.idx = cnt;
-      _highestCol.size = size;
-    }
-  });
-  if (_allRows.length > 0 && _highestCol.idx > -1) {
-    _cols[_highestCol.idx].rows(_allRows);
-  }
-
-  $(_cols).each(function (cnt, col) {
-    if (col.rows().length == 0) {
-      col.rows([new Row([], vm)]);
-    }
-  });
-
-  vm.columns(_cols);
-
-  $(document).trigger("setLayout");
-}
\ No newline at end of file
-- 
1.7.9.5

